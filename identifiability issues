# This script is for estimating the values of the 
# observed intensity of species 1 and 2 under the intuitive
# example displayed in Table 2

# Define a general function to use
estimation <- function(lambdatrue, b, psi, omega){
  product_intensty <- (lambdatrue * b * psi)
  ret <- t(omega) %*% product_intensty
  return(ret)
}


##############
# Perfect classification
##############

#defining parameters
K = 0.5 #scaling factor
lambdatrue <- c(10,7) #True intensity
b <- 0.5 #sampling probability
psi <- c(0.2, 0.5) # detection probability
omega <- diag(2) #classification probability

#baseline results
baselineRes <- estimation(lambdatrue, b, psi, omega)

# Second row: k*lambda1 and b/k
lambdatrue[1] <- lambdatrue[1] *K
b1 <- b/K # will need original b again
row2Res <- estimation(lambdatrue, b1, psi,  omega)

# Third row: k*lambda1 and psi_1/k
psi[1] <- psi[1]/K
row3Res <- estimation(lambdatrue, b, psi,  omega)


##############
# Imperfect classification
##############

#defining parameters
K = 0.5 #scaling factor
lambdatrue <- c(10,7) #True intensity
b <- 0.5 #sampling probability
psi <- c(0.2, 0.5) # detection probability
omega <- matrix(c(0.5,0.5, 0.2, 0.8),
                nrow=2, 
                ncol=2, 
                byrow=T) #classification probability

#baseline results
baselineImperfectRes <- estimation(lambdatrue, b, psi, omega)


#Fifth row: k*lambda1 and psi_1/k
lambdatrue[1] <- lambdatrue[1] *K
psi1 <- psi * c(1/K, 1)
row5Res <- estimation(lambdatrue, b, psi1,  omega)

#Sixth row
lambdatrue[2] <- lambdatrue[2] *K
b <-1/K* b
row6Res <- estimation(lambdatrue, b, psi,  omega)

# Put all data together
allResults <- data.frame(baselineRes,
                    row2Res, 
                    row3Res,
                    baselineImperfectRes,
                    row5Res,
                    row6Res)
rownames(allResults) <- c("observedInt1",
                          "observedInt2")
